package com.tencent.devops.scm.api.constant

object WebhookOutputCode {
    /* ci通用变量,所有事件都需要输出 */ // 提交版本号
    const val PIPELINE_WEBHOOK_REVISION = "BK_CI_HOOK_REVISION"

    // 触发用户
    const val PIPELINE_START_WEBHOOK_USER_ID = "BK_CI_START_WEBHOOK_USER_ID"

    // 事件类型
    const val PIPELINE_WEBHOOK_EVENT_TYPE = "BK_CI_HOOK_EVENT_TYPE"

    // 事件信息
    const val PIPELINE_WEBHOOK_COMMIT_MESSAGE = "BK_CI_HOOK_MESSAGE"

    // 服务端仓库名
    const val PIPELINE_REPO_NAME = "BK_CI_REPO_NAME"

    /******************************** ci上下文变量  */
    const val PIPELINE_GIT_REPO_URL = "GIT_CI_REPO_URL"
    const val PIPELINE_GIT_REPO = "GIT_CI_REPO"
    const val PIPELINE_GIT_REPO_NAME = "GIT_CI_REPO_NAME"
    const val PIPELINE_GIT_REPO_GROUP = "GIT_CI_REPO_GROUP"

    // 服务端仓库ID
    const val PIPELINE_GIT_REPO_ID = "GIT_CI_REPO_ID"
    const val PIPELINE_GIT_REF = "GIT_CI_REF"
    const val CI_BRANCH = "ci.branch"
    const val PIPELINE_GIT_EVENT = "GIT_CI_EVENT"
    const val PIPELINE_GIT_EVENT_URL = "GIT_CI_EVENT_URL"
    const val PIPELINE_GIT_ACTION = "GIT_CI_ACTION"

    // push
    const val PIPELINE_GIT_COMMIT_AUTHOR = "GIT_CI_COMMIT_AUTHOR"
    const val PIPELINE_GIT_SHA_SHORT = "GIT_CI_SHA_SHORT"
    const val PIPELINE_GIT_BEFORE_SHA = "GIT_CI_BEFORE_SHA"
    const val PIPELINE_GIT_BEFORE_SHA_SHORT = "GIT_CI_BEFORE_SHA_SHORT"
    const val PIPELINE_GIT_COMMIT_MESSAGE = "GIT_CI_COMMIT_MESSAGE"
    const val PIPELINE_GIT_SHA = "GIT_CI_SHA"

    // mr
    const val PIPELINE_GIT_BASE_REPO_URL = "GIT_CI_BASE_REPO_URL"
    const val PIPELINE_GIT_HEAD_REPO_URL = "GIT_CI_HEAD_REPO_URL"
    const val PIPELINE_GIT_HEAD_REF = "GIT_CI_HEAD_REF"
    const val PIPELINE_GIT_BASE_REF = "GIT_CI_BASE_REF"
    const val PIPELINE_GIT_MR_ID = "GIT_CI_MR_ID"
    const val PIPELINE_GIT_MR_IID = "GIT_CI_MR_IID"
    const val PIPELINE_GIT_MR_URL = "GIT_CI_MR_URL"
    const val PIPELINE_GIT_MR_TITLE = "GIT_CI_MR_TITLE"
    const val PIPELINE_GIT_MR_DESC = "GIT_CI_MR_DESC"
    const val PIPELINE_GIT_MR_PROPOSER = "GIT_CI_MR_PROPOSER"
    const val PIPELINE_GIT_MR_ACTION = "GIT_CI_MR_ACTION"
    const val PIPELINE_GIT_MR_TAPD_ISSUES = "GIT_CI_MR_TAPD_ISSUES"

    // tag
    const val PIPELINE_GIT_TAG_FROM = "GIT_CI_TAG_FROM"
    const val PIPELINE_GIT_TAG_MESSAGE = "GIT_CI_TAG_MESSAGE"
    const val PIPELINE_GIT_TAG_DESC = "GIT_CI_TAG_DESC"
    const val BK_REPO_GIT_MANUAL_UNLOCK = "BK_CI_REPO_GIT_MANUAL_UNLOCK"

    /******************************** ci传统文变量  */ // push事件
    const val BK_REPO_GIT_WEBHOOK_BRANCH = "BK_CI_REPO_GIT_WEBHOOK_BRANCH"
    const val BK_REPO_GIT_WEBHOOK_PUSH_USERNAME = "BK_CI_REPO_GIT_WEBHOOK_PUSH_USERNAME"
    const val BK_REPO_GIT_WEBHOOK_PUSH_BEFORE_COMMIT = "BK_REPO_GIT_WEBHOOK_PUSH_BEFORE_COMMIT"
    const val BK_REPO_GIT_WEBHOOK_PUSH_AFTER_COMMIT = "BK_REPO_GIT_WEBHOOK_PUSH_AFTER_COMMIT"
    const val BK_REPO_GIT_WEBHOOK_PUSH_TOTAL_COMMIT = "BK_REPO_GIT_WEBHOOK_PUSH_TOTAL_COMMIT"
    const val BK_REPO_GIT_WEBHOOK_PUSH_COMMIT_PREFIX = "BK_REPO_GIT_WEBHOOK_PUSH_COMMIT_"
    const val BK_REPO_GIT_WEBHOOK_PUSH_COMMIT_MSG_PREFIX = "BK_REPO_GIT_WEBHOOK_PUSH_COMMIT_MSG_"
    const val BK_REPO_GIT_WEBHOOK_PUSH_COMMIT_TIMESTAMP_PREFIX = "BK_REPO_GIT_WEBHOOK_PUSH_COMMIT_TIMESTAMP_"
    const val BK_REPO_GIT_WEBHOOK_PUSH_COMMIT_AUTHOR_PREFIX = "BK_REPO_GIT_WEBHOOK_PUSH_COMMIT_AUTHOR_"
    const val BK_REPO_GIT_WEBHOOK_PUSH_ADD_FILE_PREFIX = "BK_REPO_GIT_WEBHOOK_PUSH_ADD_FILE_"
    const val BK_REPO_GIT_WEBHOOK_PUSH_MODIFY_FILE_PREFIX = "BK_REPO_GIT_WEBHOOK_PUSH_MODIFY_FILE_"
    const val BK_REPO_GIT_WEBHOOK_PUSH_DELETE_FILE_PREFIX = "BK_REPO_GIT_WEBHOOK_PUSH_DELETE_FILE_"
    const val BK_REPO_GIT_WEBHOOK_PUSH_ADD_FILE_COUNT = "BK_REPO_GIT_WEBHOOK_PUSH_ADD_FILE_COUNT"
    const val BK_REPO_GIT_WEBHOOK_PUSH_MODIFY_FILE_COUNT = "BK_REPO_GIT_WEBHOOK_PUSH_MODIFY_FILE_COUNT"
    const val BK_REPO_GIT_WEBHOOK_PUSH_DELETE_FILE_COUNT = "BK_REPO_GIT_WEBHOOK_PUSH_DELETE_FILE_COUNT"
    const val BK_REPO_GIT_WEBHOOK_PUSH_OPERATION_KIND = "BK_REPO_GIT_WEBHOOK_PUSH_OPERATION_KIND"
    const val BK_REPO_GIT_WEBHOOK_PUSH_ACTION_KIND = "BK_REPO_GIT_WEBHOOK_PUSH_ACTION_KIND"
    const val BK_REPO_GIT_WEBHOOK_PUSH_PROJECT_ID = "BK_REPO_GIT_WEBHOOK_PUSH_PROJECT_ID"

    // MR/PR事件
    // mr 源URL
    const val PIPELINE_WEBHOOK_SOURCE_URL = "BK_CI_HOOK_SOURCE_URL"

    // mr目标url
    const val PIPELINE_WEBHOOK_TARGET_URL = "BK_CI_HOOK_TARGET_URL"
    const val BK_REPO_GIT_WEBHOOK_MR_AUTHOR = "BK_CI_REPO_GIT_WEBHOOK_MR_AUTHOR"
    const val BK_REPO_GIT_WEBHOOK_MR_ACTION = "BK_CI_REPO_GIT_WEBHOOK_MR_ACTION"
    const val BK_REPO_GIT_WEBHOOK_MR_TARGET_URL = "BK_CI_REPO_GIT_WEBHOOK_TARGET_URL"
    const val BK_REPO_GIT_WEBHOOK_MR_SOURCE_URL = "BK_CI_REPO_GIT_WEBHOOK_SOURCE_URL"
    const val BK_REPO_GIT_WEBHOOK_MR_TARGET_BRANCH = "BK_CI_REPO_GIT_WEBHOOK_TARGET_BRANCH"
    const val BK_REPO_GIT_WEBHOOK_MR_SOURCE_BRANCH = "BK_CI_REPO_GIT_WEBHOOK_SOURCE_BRANCH"
    const val BK_REPO_GIT_WEBHOOK_MR_CREATE_TIME = "BK_CI_REPO_GIT_WEBHOOK_MR_CREATE_TIME"
    const val BK_REPO_GIT_WEBHOOK_MR_UPDATE_TIME = "BK_CI_REPO_GIT_WEBHOOK_MR_UPDATE_TIME"
    const val BK_REPO_GIT_WEBHOOK_MR_CREATE_TIMESTAMP = "BK_CI_REPO_GIT_WEBHOOK_MR_CREATE_TIMESTAMP"
    const val BK_REPO_GIT_WEBHOOK_MR_UPDATE_TIMESTAMP = "BK_CI_REPO_GIT_WEBHOOK_MR_UPDATE_TIMESTAMP"
    const val BK_REPO_GIT_WEBHOOK_MR_ID = "BK_CI_REPO_GIT_WEBHOOK_MR_ID"
    const val BK_REPO_GIT_WEBHOOK_MR_NUMBER = "BK_CI_REPO_GIT_WEBHOOK_MR_NUMBER"
    const val BK_REPO_GIT_WEBHOOK_MR_DESCRIPTION = "BK_CI_REPO_GIT_WEBHOOK_MR_DESC"
    const val BK_REPO_GIT_WEBHOOK_MR_TITLE = "BK_CI_REPO_GIT_WEBHOOK_MR_TITLE"
    const val BK_REPO_GIT_WEBHOOK_MR_ASSIGNEE = "BK_CI_REPO_GIT_WEBHOOK_MR_ASSIGNEE"
    const val BK_REPO_GIT_WEBHOOK_MR_URL = "BK_CI_REPO_GIT_WEBHOOK_MR_URL"
    const val BK_REPO_GIT_WEBHOOK_MR_REVIEWERS = "BK_CI_REPO_GIT_WEBHOOK_MR_REVIEWERS"
    const val BK_REPO_GIT_WEBHOOK_MR_MILESTONE = "BK_CI_REPO_GIT_WEBHOOK_MR_MILESTONE"
    const val BK_REPO_GIT_WEBHOOK_MR_MILESTONE_ID = "BK_CI_REPO_GIT_WEBHOOK_MR_MILESTONE_ID"
    const val BK_REPO_GIT_WEBHOOK_MR_MILESTONE_DUE_DATE = "BK_CI_REPO_GIT_WEBHOOK_MR_MILESTONE_DUE_DATE"
    const val BK_REPO_GIT_WEBHOOK_MR_LABELS = "BK_CI_REPO_GIT_WEBHOOK_MR_LABELS"
    const val BK_REPO_GIT_WEBHOOK_MR_LAST_COMMIT = "BK_REPO_GIT_WEBHOOK_MR_LAST_COMMIT"
    const val BK_REPO_GIT_WEBHOOK_MR_LAST_COMMIT_MSG = "BK_REPO_GIT_WEBHOOK_MR_LAST_COMMIT_MSG"
    const val BK_REPO_GIT_WEBHOOK_MR_MERGE_TYPE = "BK_REPO_GIT_WEBHOOK_MR_MERGE_TYPE"
    const val BK_REPO_GIT_WEBHOOK_MR_MERGE_COMMIT_SHA = "BK_REPO_GIT_WEBHOOK_MR_MERGE_COMMIT_SHA"
    const val BK_REPO_GIT_WEBHOOK_MR_BASE_COMMIT = "BK_REPO_GIT_WEBHOOK_MR_BASE_COMMIT"
    const val BK_REPO_GIT_WEBHOOK_MR_TARGET_COMMIT = "BK_REPO_GIT_WEBHOOK_MR_TARGET_COMMIT"
    const val BK_REPO_GIT_WEBHOOK_MR_SOURCE_COMMIT = "BK_REPO_GIT_WEBHOOK_MR_SOURCE_COMMIT"
    const val BK_GIT_MR_NUMBER = "BK_CI_GIT_MR_NUMBER"
    const val BK_HOOK_MR_COMMITTER = "BK_CI_HOOK_MR_COMMITTER"
    const val BK_HOOK_MR_ID = "BK_CI_HOOK_MR_ID"
    const val BK_REPO_GIT_WEBHOOK_COMMIT_ID = "BK_CI_REPO_GIT_WEBHOOK_COMMITID"

    //tag事件
    const val BK_REPO_GIT_WEBHOOK_TAG_NAME = "BK_CI_REPO_GIT_WEBHOOK_TAG_NAME"
    const val BK_REPO_GIT_WEBHOOK_TAG_OPERATION = "BK_CI_REPO_GIT_WEBHOOK_TAG_OPERATION"
    const val BK_REPO_GIT_WEBHOOK_TAG_USERNAME = "BK_CI_REPO_GIT_WEBHOOK_TAG_USERNAME"
    const val BK_REPO_GIT_WEBHOOK_TAG_CREATE_FROM = "BK_CI_REPO_GIT_WEBHOOK_TAG_CREATE_FROM"

    // issue事件
    const val BK_REPO_GIT_WEBHOOK_ISSUE_TITLE = "BK_CI_REPO_GIT_WEBHOOK_ISSUE_TITLE"
    const val BK_REPO_GIT_WEBHOOK_ISSUE_ID = "BK_CI_REPO_GIT_WEBHOOK_ISSUE_ID"
    const val BK_REPO_GIT_WEBHOOK_ISSUE_IID = "BK_CI_REPO_GIT_WEBHOOK_ISSUE_IID"
    const val BK_REPO_GIT_WEBHOOK_ISSUE_DESCRIPTION = "BK_CI_REPO_GIT_WEBHOOK_ISSUE_DESCRIPTION"
    const val BK_REPO_GIT_WEBHOOK_ISSUE_STATE = "BK_CI_REPO_GIT_WEBHOOK_ISSUE_STATE"
    const val BK_REPO_GIT_WEBHOOK_ISSUE_OWNER = "BK_CI_REPO_GIT_WEBHOOK_ISSUE_OWNER" // issue 的负责人
    const val BK_REPO_GIT_WEBHOOK_ISSUE_URL = "BK_CI_REPO_GIT_WEBHOOK_ISSUE_URL"
    const val BK_REPO_GIT_WEBHOOK_ISSUE_MILESTONE_ID = "BK_CI_REPO_GIT_WEBHOOK_ISSUE_MILESTONE_ID"
    const val BK_REPO_GIT_WEBHOOK_ISSUE_ACTION = "BK_CI_REPO_GIT_WEBHOOK_ISSUE_ACTION"

    // review事件
    const val BK_REPO_GIT_WEBHOOK_REVIEW_REVIEWABLE_ID = "BK_CI_REPO_GIT_WEBHOOK_REVIEW_REVIEWABLE_ID"
    const val BK_REPO_GIT_WEBHOOK_REVIEW_REVIEWABLE_TYPE = "BK_CI_REPO_GIT_WEBHOOK_REVIEW_REVIEWABLE_TYPE"
    const val BK_REPO_GIT_WEBHOOK_REVIEW_RESTRICT_TYPE = "BK_CI_REPO_GIT_WEBHOOK_REVIEW_RESTRICT_TYPE"
    const val BK_REPO_GIT_WEBHOOK_REVIEW_APPROVING_REVIEWERS =
        "BK_CI_REPO_GIT_WEBHOOK_REVIEW_APPROVING_REVIEWERS"
    const val BK_REPO_GIT_WEBHOOK_REVIEW_APPROVED_REVIEWERS = "BK_CI_REPO_GIT_WEBHOOK_REVIEW_APPROVED_REVIEWERS"
    const val BK_REPO_GIT_WEBHOOK_REVIEW_REVIEWERS = "BK_CI_REPO_GIT_WEBHOOK_REVIEW_REVIEWERS"
    const val BK_REPO_GIT_WEBHOOK_REVIEW_STATE = "BK_CI_REPO_GIT_WEBHOOK_REVIEW_STATE"
    const val BK_REPO_GIT_WEBHOOK_REVIEW_OWNER = "BK_CI_REPO_GIT_WEBHOOK_REVIEW_OWNER"
    const val BK_REPO_GIT_WEBHOOK_REVIEW_ID = "BK_CI_REPO_GIT_WEBHOOK_REVIEW_ID"
    const val BK_REPO_GIT_WEBHOOK_REVIEW_IID = "BK_CI_REPO_GIT_WEBHOOK_REVIEW_IID"
    const val BK_REPO_GIT_WEBHOOK_REVIEW_SOURCE_BRANCH = "BK_CI_REPO_GIT_WEBHOOK_REVIEW_SOURCE_BRANCH"
    const val BK_REPO_GIT_WEBHOOK_REVIEW_SOURCE_PROJECT_ID = "BK_CI_REPO_GIT_WEBHOOK_REVIEW_SOURCE_PROJECT_ID"
    const val BK_REPO_GIT_WEBHOOK_REVIEW_SOURCE_COMMIT = "BK_CI_REPO_GIT_WEBHOOK_REVIEW_SOURCE_COMMIT"
    const val BK_REPO_GIT_WEBHOOK_REVIEW_TARGET_COMMIT = "BK_CI_REPO_GIT_WEBHOOK_REVIEW_TARGET_COMMIT"
    const val BK_REPO_GIT_WEBHOOK_REVIEW_TARGET_BRANCH = "BK_CI_REPO_GIT_WEBHOOK_REVIEW_TARGET_BRANCH"
    const val BK_REPO_GIT_WEBHOOK_REVIEW_TARGET_PROJECT_ID = "BK_CI_REPO_GIT_WEBHOOK_REVIEW_TARGET_PROJECT_ID"

    // note事件
    const val PIPELINE_WEBHOOK_NOTE_COMMENT = "PIPELINE_WEBHOOK_NOTE_COMMENT"
    const val PIPELINE_WEBHOOK_NOTE_ID = "PIPELINE_WEBHOOK_NOTE_ID"
    const val BK_REPO_GIT_WEBHOOK_NOTE_COMMENT = "BK_CI_REPO_GIT_WEBHOOK_NOTE_COMMENT"
    const val BK_REPO_GIT_WEBHOOK_NOTE_ID = "BK_CI_REPO_GIT_WEBHOOK_NOTE_ID"
    const val BK_REPO_GIT_WEBHOOK_NOTE_PROJECT_ID = "BK_CI_REPO_GIT_WEBHOOK_NOTE_PROJECT_ID"
    const val BK_REPO_GIT_WEBHOOK_NOTE_NOTEABLE_TYPE = "BK_CI_REPO_GIT_WEBHOOK_NOTE_NOTEABLE_TYPE"
    const val BK_REPO_GIT_WEBHOOK_NOTE_AUTHOR_ID = "BK_CI_REPO_GIT_WEBHOOK_NOTE_AUTHOR_ID"
    const val BK_REPO_GIT_WEBHOOK_NOTE_CREATED_AT = "BK_CI_REPO_GIT_WEBHOOK_NOTE_CREATED_AT"
    const val BK_REPO_GIT_WEBHOOK_NOTE_UPDATED_AT = "BK_CI_REPO_GIT_WEBHOOK_NOTE_UPDATED_AT"
    const val BK_REPO_GIT_WEBHOOK_NOTE_URL = "BK_CI_REPO_GIT_WEBHOOK_NOTE_URL"

    // ci历史变量,兼容使用
    const val PIPELINE_WEBHOOK_BRANCH = "BK_CI_HOOK_BRANCH" // hookBranch
    const val PIPELINE_WEBHOOK_SOURCE_PROJECT_ID = "BK_CI_HOOK_SOURCE_PROJECT_ID"
    const val PIPELINE_WEBHOOK_TARGET_PROJECT_ID = "BK_CI_HOOK_TARGET_PROJECT_ID"
    const val PIPELINE_WEBHOOK_SOURCE_REPO_NAME = "BK_CI_HOOK_SOURCE_REPO_NAME"
    const val PIPELINE_WEBHOOK_TARGET_REPO_NAME = "BK_CI_HOOK_TARGET_REPO_NAME"
    const val PIPELINE_WEBHOOK_SOURCE_BRANCH = "BK_CI_HOOK_SOURCE_BRANCH"
    const val PIPELINE_WEBHOOK_TARGET_BRANCH = "BK_CI_HOOK_TARGET_BRANCH"

    const val BK_REPO_SVN_WEBHOOK_REVERSION = "BK_CI_REPO_SVN_WEBHOOK_REVERSION"
    const val BK_REPO_SVN_WEBHOOK_USERNAME = "BK_CI_REPO_SVN_WEBHOOK_USERNAME"
    const val BK_REPO_SVN_WEBHOOK_COMMIT_TIME = "BK_CI_REPO_SVN_WEBHOOK_COMMIT_TIME"
}
